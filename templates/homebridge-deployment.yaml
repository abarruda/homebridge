apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  labels:
    app: {{ .Chart.Name }}

spec:
  
  replicas: {{ .Values.replicaCount }}
  
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}

    spec:

      volumes:

        - name: config
          configMap:
            name: {{ .Values.config.configMapName }}

        - name: homebridge-persist
          flexVolume:
            driver: "fstab/cifs"
            fsType: "cifs"
            secretRef:
              name: "{{ .Values.secrets.storage.name }}"
            options:
              networkPath: "{{ .Values.secrets.storage.networkPath }}/persist"
              mountOptions: "{{ .Values.storage.mountOptions }}"

      containers:
        - name: {{ .Chart.Name }}-deployment
          image: "{{ .Values.image.digest }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          volumeMounts:
            - name: homebridge-persist
              mountPath: /homebridge/persist

            - name: config
              mountPath: /homebridge/config.json
              subPath: config.json

            - name: config
              mountPath: /homebridge/package.json
              subPath: package.json

          securityContext:
            privileged: true

          env:
            - name: PGID
              value: "{{ .Values.environment.pgid }}"
            - name: PUID
              value: "{{ .Values.environment.puid }}"
            - name: HOMEBRIDGE_CONFIG_UI
              value: "{{ .Values.environment.ui.enabled }}"
            - name: HOMEBRIDGE_CONFIG_UI_PORT
              value: "{{ .Values.environment.ui.port }}"
            - name: TZ
              value: "{{ .Values.environment.timezone }}"
            - name: PACKAGES
              value: "{{ .Values.environment.packages }}"

          ports:
            - name: {{ .Values.ports.ui.name }}
              containerPort: {{ .Values.ports.ui.number }}
              protocol: {{ .Values.ports.ui.protocol }}

            - name: {{ .Values.ports.service.name }}
              containerPort: {{ .Values.ports.service.number }}
              protocol: {{ .Values.ports.service.protocol }}

      hostNetwork: true

      {{- if .Values.affinity.value }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: {{ .Values.affinity.weight }}
              preference:
                matchExpressions:
                  - key: "{{ .Values.affinity.label }}"
                    operator: In
                    values: 
                      {{- range .Values.affinity.value }}
                      - {{ . | quote }}
                      {{- end }}
      {{- end }}